<div class="w-screen">
  <% found = false %>
  <% @score_values = !Score.where.not(value: [nil, ""]).empty? %>
  
  <% 
  # Cache scrutineering results once per request for dances with participating people
  @scrutineering_cache = {}
  participating_people = @people.select { |person| 
    @heats.any? {|heat| [heat.entry.lead, heat.entry.follow].include?(person)} or 
    @formations.any? {|id, number| id == person.id && number}
  }
  
  if participating_people.any?
    # Find all scrutineering dances that have participating people
    scrutineering_dances = @heats.select { |heat|
      heat.dance.semi_finals && participating_people.any? { |person|
        [heat.entry.lead, heat.entry.follow].include?(person)
      }
    }.map(&:dance).uniq
    
    # Calculate scrutineering results once for each relevant dance
    scrutineering_dances.each do |dance|
      @scrutineering_cache[dance.id] = dance.scrutineering
    end
  end
  %>
  
  <% @people.each do |person| %>
    <% next unless @heats.any? {|heat| [heat.entry.lead, heat.entry.follow].include? person} or @formations.any? {|id, number| id == person.id} %>
    <%
    # Determine if we should use landscape mode
    # Use landscape when there are multiple information sections (comments or feedback) for the same heats
    person_heats = @heats.select { |heat|
      [heat.entry.lead, heat.entry.follow].include?(person) or
      @formations.any? {|id, number| id == person.id && number == heat.number}
    }

    has_comments = person_heats.any? { |heat|
      heat.scores.any? { |score| score.comments && !score.comments.blank? }
    }

    has_feedback = %w(+ & @).include?(@event.open_scoring) &&
                   person_heats.any? { |heat|
                     heat.category == 'Open' ||
                     (heat.category == 'Closed' && (@event.heat_range_cat > 0 || @event.closed_scoring == '='))
                   }

    # Use landscape if we have comments OR feedback (creating multiple tables for same heats)
    use_landscape = has_comments || has_feedback
    %>
    <%= render "people/scores#{use_landscape ? '_landscape' : ''}", person: person %>
    <% found = true %>
  <% end %>

  <% unless found %>
  <p>No scores are entered yet for this event.</p>
  <% end %>
</div>