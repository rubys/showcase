# Source - Receive logs via HTTP with custom bearer authentication
[sources.http_logs]
type = "http_server"
address = "0.0.0.0:8080"  # Internal port - nginx proxies to this
decoding.codec = "json"
# Custom authentication to check Authorization: Bearer <token>
auth.strategy = "custom"
auth.source = '''
# Check for Authorization header with bearer token
authorization = to_string(.headers.authorization) ?? ""
expected_token = "${RAILS_MASTER_KEY}"
starts_with(authorization, "Bearer ") && 
slice!(authorization, 7) == expected_token
'''

# Transform - Extract date from timestamp
[transforms.add_date]
type = "remap"
inputs = ["http_logs"]
source = '''
# Use current date for file path
.date = format_timestamp!(now(), "%Y-%m-%d")
'''

# Sink - Write to daily log file
[sinks.daily_logs]
type = "file"
inputs = ["add_date"]
path = "/logs/showcase/{{ date }}.log"  # Container path
encoding.codec = "json"
compression = "gzip"

# Optional: Filter for errors
[transforms.filter_errors]
type = "filter"
inputs = ["add_date"]
condition = '.stream == "stderr" || .level == "error" || .level == "ERROR"'

# Separate error logs
[sinks.errors]
type = "file"
inputs = ["filter_errors"]
path = "/logs/showcase/errors-{{ date }}.log"
encoding.codec = "json"