<%= form_with(model: table, class: "contents", id: "table-form") do |form| %>
  <% if table.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-md mt-3">
      <h2><%= pluralize(table.errors.count, "error") %> prohibited this table from being saved:</h2>

      <ul class="list-disc ml-6">
        <% table.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  
  <% if table.option_id %>
    <%= form.hidden_field :option_id %>
  <% end %>

  <div class="my-5">
    <%= form.label :number %>
    <%= form.number_field :number, class: ["block shadow rounded-md border outline-none px-3 py-2 mt-2 w-full", {"border-gray-400 focus:outline-blue-600": table.errors[:number].none?, "border-red-400 focus:outline-red-600": table.errors[:number].any?}] %>
  </div>


  <div class="my-5">
    <%= form.label :size %>
    <%= form.number_field :size, class: ["block shadow rounded-md border outline-none px-3 py-2 mt-2 w-full", {"border-gray-400 focus:outline-blue-600": table.errors[:size].none?, "border-red-400 focus:outline-red-600": table.errors[:size].any?}] %>
  </div>

  <% if defined?(@studios_with_unassigned) && @studios_with_unassigned.any? %>
    <div class="my-5">
      <% if defined?(@available_seats) %>
        <%= form.label :studio_id, "Add people from studio (optional)" %>
        <%= form.select :studio_id, options_for_select([["Select a studio...", ""]] + @studios_with_unassigned.map { |id, name| [name, id] }), {}, 
            { class: "block shadow rounded-md border border-gray-400 outline-none px-3 py-2 mt-2 w-full focus:outline-blue-600" } %>
        <p class="text-sm text-gray-500 mt-1">If selected, up to <%= @available_seats %> unassigned people from this studio will be added to the table.</p>
      <% else %>
        <%= form.label :studio_id, "Fill table with people from studio (optional)" %>
        <%= form.select :studio_id, options_for_select([["Select a studio...", ""]] + @studios_with_unassigned.map { |id, name| [name, id] }), {}, 
            { class: "block shadow rounded-md border border-gray-400 outline-none px-3 py-2 mt-2 w-full focus:outline-blue-600", id: "studio_select" } %>
        <p class="text-sm text-gray-500 mt-1">If selected, the table will be automatically filled with unassigned people from this studio.</p>
      <% end %>
    </div>
    
    <div class="my-5">
      <% 
        # Default to checked if this table has the highest number
        is_highest_number = false
        max_number = Table.where(option_id: table.option_id).maximum(:number) || 0
        
        if table.new_record?
          # For new tables, check if the assigned number is higher than current max
          is_highest_number = table.number > max_number
        else
          # For existing tables, check if this table has the highest number
          is_highest_number = table.number >= max_number
        end
      %>
      <%= form.check_box :create_additional_tables, checked: is_highest_number, class: "mr-2" %>
      <%= form.label :create_additional_tables, "Create additional tables if needed", class: "inline" %>
      <p class="text-sm text-gray-500 mt-1">When checked, additional tables will be created if the studio has more people than can fit at one table. Studio pairs will also be included.</p>
    </div>
  <% end %>

  <div class="my-5">
    <%= form.check_box :locked, class: "mr-2" %>
    <%= form.label :locked, "Lock table", class: "inline" %>
    <p class="text-sm text-gray-500 mt-1">When checked, this table will not be reassigned, packed, reset, or renumbered.</p>
  </div>

<% end %>
